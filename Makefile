# Makefile –¥–ª—è SaaS Laravel –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
.PHONY: help up down build restart logs shell migrate migrate-fresh seed composer npm artisan test clean fix-perms

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_FILE = docker-compose.yml
APP_CONTAINER = saasapp-app-1
DB_CONTAINER = saasapp-db-1

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN = \033[0;32m
YELLOW = \033[1;33m
RED = \033[0;31m
NC = \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(GREEN)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(YELLOW)%-20s$(NC) %s\n", $$1, $$2}'

up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE) up -d
	@echo "$(GREEN)‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!$(NC)"
	@echo "$(YELLOW)üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000$(NC)"
	@echo "$(YELLOW)üîç Meilisearch –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:7700$(NC)"

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE) down
	@echo "$(GREEN)‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!$(NC)"

build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(YELLOW)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE) build --no-cache
	@echo "$(GREEN)‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã!$(NC)"

restart: down up ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@echo "$(YELLOW)üìã –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:$(NC)"
	docker-compose -f $(COMPOSE_FILE) logs -f app

logs-all: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(YELLOW)üìã –õ–æ–≥–∏ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:$(NC)"
	docker-compose -f $(COMPOSE_FILE) logs -f

shell: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@echo "$(YELLOW)üêö –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app bash

db-shell: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(YELLOW)üêö –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec db mysql -u root -p

migrate: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
	@echo "$(YELLOW)üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan migrate
	@echo "$(GREEN)‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!$(NC)"

migrate-fresh: ## –°–±—Ä–æ—Å–∏—Ç—å –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–Ω–æ–≤–æ
	@echo "$(RED)‚ö†Ô∏è  –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ! (y/N): " confirm && [ "$$confirm" = "y" ] || exit 1
	docker-compose -f $(COMPOSE_FILE) exec app php artisan migrate:fresh
	@echo "$(GREEN)‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞ –∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!$(NC)"

migrate-tenant: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–µ–Ω–∞–Ω—Ç–æ–≤
	@echo "$(YELLOW)üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è —Ç–µ–Ω–∞–Ω—Ç–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan tenants:migrate
	@echo "$(GREEN)‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —Ç–µ–Ω–∞–Ω—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!$(NC)"

seed: ## –ó–∞–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
	@echo "$(YELLOW)üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan db:seed
	@echo "$(GREEN)‚úÖ –ë–∞–∑–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!$(NC)"

check-data: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ
	@echo "$(YELLOW)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan check:data

composer: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(YELLOW)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app composer install
	@echo "$(GREEN)‚úÖ Composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!$(NC)"

composer-update: ## –û–±–Ω–æ–≤–∏—Ç—å composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(YELLOW)üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app composer update
	@echo "$(GREEN)‚úÖ Composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!$(NC)"

npm: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(YELLOW)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app npm install
	@echo "$(GREEN)‚úÖ NPM –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!$(NC)"

npm-build: ## –°–æ–±—Ä–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
	@echo "$(YELLOW)üé® –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app npm run build
	@echo "$(GREEN)‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–æ–±—Ä–∞–Ω!$(NC)"

npm-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å dev —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	@echo "$(YELLOW)üé® –ó–∞–ø—É—Å–∫ dev —Å–µ—Ä–≤–µ—Ä–∞...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app npm run dev

artisan: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å artisan –∫–æ–º–∞–Ω–¥—É (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make artisan cmd="migrate:status")
	@if [ -z "$(cmd)" ]; then \
		echo "$(RED)‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: make artisan cmd=\"–∫–æ–º–∞–Ω–¥–∞\"$(NC)"; \
		exit 1; \
	fi
	@echo "$(YELLOW)üîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ artisan –∫–æ–º–∞–Ω–¥—ã: $(cmd)$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan $(cmd)

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(YELLOW)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan test
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!$(NC)"

cache-clear: ## –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à Laravel
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Laravel...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan cache:clear
	docker-compose -f $(COMPOSE_FILE) exec app php artisan config:clear
	docker-compose -f $(COMPOSE_FILE) exec app php artisan route:clear
	docker-compose -f $(COMPOSE_FILE) exec app php artisan view:clear
	@echo "$(GREEN)‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω!$(NC)"

optimize: ## –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	@echo "$(YELLOW)‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan optimize
	@echo "$(GREEN)‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!$(NC)"

storage-link: ## –°–æ–∑–¥–∞—Ç—å —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –¥–ª—è storage
	@echo "$(YELLOW)üîó –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è storage...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan storage:link
	@echo "$(GREEN)‚úÖ –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!$(NC)"

setup: up migrate seed ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∑–∞–ø—É—Å–∫ + –º–∏–≥—Ä–∞—Ü–∏–∏ + —Å–∏–¥—ã)

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ volumes
	@echo "$(RED)‚ö†Ô∏è  –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ volumes...$(NC)"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ! (y/N): " confirm && [ "$$confirm" = "y" ] || exit 1
	docker-compose -f $(COMPOSE_FILE) down -v --remove-orphans
	docker system prune -f
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(YELLOW)üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:$(NC)"
	docker-compose -f $(COMPOSE_FILE) ps

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Scout (–ø–æ–∏—Å–∫)
scout-flush: ## –û—á–∏—Å—Ç–∏—Ç—å –∏–Ω–¥–µ–∫—Å Scout
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ –∏–Ω–¥–µ–∫—Å–∞ Scout...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan scout:flush
	@echo "$(GREEN)‚úÖ –ò–Ω–¥–µ–∫—Å Scout –æ—á–∏—â–µ–Ω!$(NC)"

scout-import: ## –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Scout
	@echo "$(YELLOW)üì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ Scout...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan scout:import
	@echo "$(GREEN)‚úÖ –î–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ Scout!$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—á–µ—Ä–µ–¥—è–º–∏
queue-work: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—á–µ—Ä–µ–¥–µ–π
	@echo "$(YELLOW)üîÑ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan queue:work

queue-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—á–µ—Ä–µ–¥–µ–π
	@echo "$(YELLOW)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan queue:restart
	@echo "$(GREEN)‚úÖ –û—á–µ—Ä–µ–¥–∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º
schedule-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
	@echo "$(YELLOW)‚è∞ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan schedule:run
	@echo "$(GREEN)‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω!$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–Ω–∞–Ω—Ç–∞–º–∏
tenant-create: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Ç–µ–Ω–∞–Ω—Ç–∞ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make tenant-create domain="example.com")
	@if [ -z "$(domain)" ]; then \
		echo "$(RED)‚ùå –£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω: make tenant-create domain=\"example.com\"$(NC)"; \
		exit 1; \
	fi
	@echo "$(YELLOW)üè¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–Ω–∞–Ω—Ç–∞ –¥–ª—è –¥–æ–º–µ–Ω–∞: $(domain)$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app php artisan tenants:create $(domain)
	@echo "$(GREEN)‚úÖ –¢–µ–Ω–∞–Ω—Ç —Å–æ–∑–¥–∞–Ω!$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev: up npm-dev ## –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üéØ –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—â–µ–Ω!$(NC)"
	@echo "$(YELLOW)üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8000$(NC)"
	@echo "$(YELLOW)üîç Meilisearch: http://localhost:7700$(NC)"
	@echo "$(YELLOW)üé® Vite dev server: http://localhost:5173$(NC)"

fix-perms: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥–∏ storage –∏ bootstrap/cache –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "$(YELLOW)üîí –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ (storage, bootstrap/cache)...$(NC)"
	docker-compose -f $(COMPOSE_FILE) exec app bash -lc "set -e; \
	mkdir -p storage/framework/{cache,sessions,views} storage/logs bootstrap/cache; \
	chown -R www-data:www-data storage bootstrap/cache; \
	find storage -type d -exec chmod 775 {} \; ; \
	find storage -type f -exec chmod 664 {} \; ; \
	find bootstrap/cache -type d -exec chmod 775 {} \; ; \
	find bootstrap/cache -type f -exec chmod 664 {} \; ; \
	chmod -R ug+rwX storage bootstrap/cache"
	@echo "$(GREEN)‚úÖ –ü—Ä–∞–≤–∞ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!$(NC)"
