version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        entrypoint: ["/bin/bash", "/docker/entrypoint.sh"]
        env_file:
            - .env
        ports:
            - "5173:5173" # ← добавь сюда!
        environment:
            - DB_HOST=db # Используем имя сервиса как хост
            - DB_PORT=3306
            - MYSQL_ROOT_HOST='%'
        volumes:
            - .:/var/www
            - ./docker/php.ini:/usr/local/etc/php/conf.d/custom.ini
        networks:
            - app-network
        depends_on:
            db:
                condition: service_healthy
        restart: unless-stopped

    webserver:
        image: nginx:alpine
        ports:
            - "8000:80"
        volumes:
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - app
        restart: unless-stopped

    meilisearch:
        image: getmeili/meilisearch:v1.8
        ports:
            - "7700:7700"
        environment:
            MEILI_MASTER_KEY: masterKey
        volumes:
            - meili_data:/meili_data
        networks:
            - app-network
        restart: unless-stopped

    db:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_HOST: '%' # Разрешаем подключение с любого хоста
        ports:
            -   "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 5s
            timeout: 10s
            retries: 10
        restart: unless-stopped
        command: --default-authentication-plugin=mysql_native_password # Для совместимости

volumes:
    mysql_data:
        driver: local
    meili_data:
        driver: local
networks:
    app-network:
        driver: bridge
        name: saasapp-network # Явное имя сети

